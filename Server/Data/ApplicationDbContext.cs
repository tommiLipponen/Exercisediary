// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Exercisediary.Shared;
using ExerciseDiary.Server;
using Microsoft.EntityFrameworkCore;

namespace ExerciseDiary.Server.Data;

public partial class ApplicationDbContext : DbContext
{
    public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Exercise> Exercises { get; set; }

    public virtual DbSet<ExerciseType> ExerciseTypes { get; set; }

    public virtual DbSet<Location> Locations { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb3_general_ci")
            .HasCharSet("utf8mb3");

        modelBuilder.Entity<Exercise>(entity =>
        {
            entity.HasKey(e => e.ExerciseId).HasName("PRIMARY");

            entity.ToTable("Exercise", tb => tb.HasComment("Exercise instances and their details."));

            entity.HasIndex(e => e.ExerciseTypeId, "FK_ExerciseTypeId_Exercises_idx");

            entity.HasIndex(e => e.LocationId, "FK_LocationId_Exercise_idx");

            entity.Property(e => e.ExerciseId).HasComment("Auto generated UUID");
            entity.Property(e => e.BmpCount).HasComment("Average heart beat rate.");
            entity.Property(e => e.CaloriesBurned).HasComment("Calories burned during this exercise.");
            entity.Property(e => e.Duration).HasComment("Exercise duration in minutes, data base calculates.");
            entity.Property(e => e.EndTime)
                .HasComment("Required, needed for Duration calculation.")
                .HasColumnType("datetime");
            entity.Property(e => e.EndpointLat).HasPrecision(9, 6);
            entity.Property(e => e.EndpointLong)
                .HasPrecision(9, 6)
                .HasComment("X and Y coordinates of Endpoint.");
            entity.Property(e => e.ExerciseTypeId).HasComment("FK from ExerciseType table.");
            entity.Property(e => e.LocationId).HasComment("Place where exercise took place.");
            entity.Property(e => e.MetersTraveled).HasComment("Distance travelled.");
            entity.Property(e => e.Notes).HasComment("Exercise notes.");
            entity.Property(e => e.StartTime)
                .HasComment("Required, neede for Duration calucation.")
                .HasColumnType("datetime");
            entity.Property(e => e.StartpointLat)
                .HasPrecision(9, 6)
                .HasComment("X and Y coordinates of Startpoint.");
            entity.Property(e => e.StartpointLong).HasPrecision(9, 6);

            entity.HasOne(d => d.ExerciseType).WithMany(p => p.Exercises)
                .HasForeignKey(d => d.ExerciseTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ExerciseTypeId_Exercises");

            entity.HasOne(d => d.Location).WithMany(p => p.Exercises)
                .HasForeignKey(d => d.LocationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LocationId_Exercise");
        });

        modelBuilder.Entity<ExerciseType>(entity =>
        {
            entity.HasKey(e => e.ExerciseTypeId).HasName("PRIMARY");

            entity.ToTable("ExerciseType", tb => tb.HasComment("Exercise types, like swimming, jogging, etc."));

            entity.HasIndex(e => e.ExerciseName, "idx_ExerciseTypes_ExerciseType");

            entity.Property(e => e.ExerciseTypeId).HasComment("Auto generated UUID");
            entity.Property(e => e.ExerciseName)
                .IsRequired()
                .HasMaxLength(120);
        });

        modelBuilder.Entity<Location>(entity =>
        {
            entity.HasKey(e => e.LocationId).HasName("PRIMARY");

            entity.ToTable("Location", tb => tb.HasComment("Place where exercise took place like \"New York\" \"Central Park\""));

            entity.HasIndex(e => e.City, "idx_Location_City");

            entity.Property(e => e.City)
                .IsRequired()
                .HasMaxLength(45)
                .HasComment("Name of the where exercise took place.");
            entity.Property(e => e.Place)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("Name of the exercise place, like Central Park, or Heavy Gym.");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}