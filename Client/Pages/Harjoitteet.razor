@page "/harjoitteet"
@using Exercisediary.Shared;
@inject IClientExerciseData ClientExerciseData
@inject NavigationManager NavigationManager

<PageTitle>Harjoitteet</PageTitle>

<style>
    #muokkaabutton {
        float: right;
    }
</style>


<div class="mb-3">
    <h3>Harjoitteet</h3>
</div>

<div class="mb-5">
    <button class="btn btn-success" @onclick="CreateNewExercise">Lisää Uusi Harjoite</button>
</div>



<div class="grid">
    <QuickGrid Items="@FilteredExercises" Pagination="state">
        <PropertyColumn Property="@(e => e.ExerciseType.ExerciseName)" Title="Urheilulaji" Sortable="true"> 
            <ColumnOptions>
                <div class="search-box">
                    <input type="search" autofocus @bind="exerciseTypeFilter" @bind:event="oninput" placeholder="Hae Laji..." />
                </div>
            </ColumnOptions>
        </PropertyColumn>
        
        <PropertyColumn Property="@(e => e.Location.City)" Title="Paikkakunta" Sortable="true">
            <ColumnOptions>
                <div class="search-box">
                    <input type="search" autofocus @bind="locationFilter" @bind:event="oninput" placeholder="Hae Paikkakunta..." />
                </div>
            </ColumnOptions>
        </PropertyColumn>

        <PropertyColumn Property="exercises => exercises.StartTime" Title="Aloitusaika" Format="dd MM yyyy HH:mm" Align="Align.Center" Sortable="true" />
        <PropertyColumn Property="exercises => exercises.EndTime" Title="Lopetusaika" Format="dd MM yyyy HH:mm" Align="Align.Center" />
        <PropertyColumn Property="exercises => exercises.Duration" Title="Kesto min" Sortable="true" Align="Align.Center" />
        <PropertyColumn Property="exercises => exercises.Notes" Title="Muistio" />
        <PropertyColumn Property="exercises => exercises.MetersTraveled" Title="Matka m" Sortable="true" Align="Align.Center" />
        <TemplateColumn Title="Toiminnot">
            <button class="btn btn-primary" id="muokkaabutton" @onclick="(() => ShowExercise(context.ExerciseId))">Tiedot/Muokkaus</button>
        </TemplateColumn>
    </QuickGrid>
</div>

<Paginator State="state" />


@code {
    private IEnumerable<Exercise> exercises = new List<Exercise>().AsQueryable();
    PaginationState state = new PaginationState { ItemsPerPage = 10 };
    string? exerciseTypeFilter;
    string? locationFilter;

    IQueryable<Exercise> FilteredExercises
    {
        get
        {
            var result = exercises.AsQueryable();
            if (!string.IsNullOrEmpty(exerciseTypeFilter))
            {
                result = result.Where(e => e.ExerciseType.ExerciseName.Contains(exerciseTypeFilter, StringComparison.CurrentCultureIgnoreCase));
            }
            if (!string.IsNullOrEmpty(locationFilter))
            {
                result = result.Where(e => e.Location.City.Contains(locationFilter, StringComparison.CurrentCultureIgnoreCase));
            }
            return result;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        exercises = (await ClientExerciseData.GetAllExercisesAsync()).AsQueryable();
    }

    void ShowExercise(Guid id)
    {
        NavigationManager.NavigateTo($"harjoite/{id}");
    }

    void CreateNewExercise()
    {
        NavigationManager.NavigateTo("/harjoite");
    }

}


