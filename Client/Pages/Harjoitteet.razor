@page "/harjoitteet"
@using Exercisediary.Shared;
@inject IClientExerciseData ClientExerciseData
@inject NavigationManager NavigationManager

<PageTitle>Harjoitteet</PageTitle>
<h3>Harjoitteet</h3>

<button class="btn btn-success" @onclick="CreateNewExercise">Lisää Uusi Harjoite</button>

<QuickGrid Items="@filteredExercises" Pagination="@pagination" >
    <PropertyColumn Property="exercises => exercises.ExerciseType.ExerciseName" Title="Urheilulaji" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <input type="search"
                    autofocus @bind="searchExerciseType" @bind:event="oninput"
                    placeholder="Hae Lajilla..." />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="exercises => exercises.Location.City" Title="Paikkakunta" Sortable="true" />
    <PropertyColumn Property="exercises => exercises.StartTime" Title="Aloitusaika" Format="dd MM yyyy HH:mm" Align="Align.Center" Sortable="true"  />
    <PropertyColumn Property="exercises => exercises.EndTime" Title="Lopetusaika" Format="dd MM yyyy HH:mm" Align="Align.Center" />
    <PropertyColumn Property="exercises => exercises.Duration" Title="Kesto min" Sortable="true" Align="Align.Center" />
    <PropertyColumn Property="exercises => exercises.Notes" Title="Muistio" />
    <PropertyColumn Property="exercises => exercises.MetersTraveled" Title="Matka m" Sortable="true" Align="Align.Center" />
</QuickGrid>

<Paginator Value="@pagination" />

<style>
    #muokkaabutton {
        float: right;
    }
</style>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Urheilulaji</th>
            <th>Suorituspaikka</th>
            <th>StartTime</th>
            <th>EndTime</th>
            <th>Duration</th>
           @* <th>BmpCount</th>
            <th>CaloriesBurned</th>*@
            <th>Notes</th>
           @* <th>StartpointLat</th>
            <th>StartpointLong</th>
            <th>EndpointLat</th>
            <th>EndpointLong</th>*@
            <th>MetersTraveled</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var exercise in exercises)
        {
            <tr>
                <td>@exercise.ExerciseType.ExerciseName</td>
                <td>@exercise.Location.City</td>
                <td>@exercise.StartTime.ToString("dd/MM/yyyy HH:mm")</td>
                <td>@exercise.StartTime.ToString("dd/MM/yyyy HH:mm")</td>
                <td>@exercise.Duration</td>
               @* <td>@exercise.BmpCount</td>
                <td>@exercise.CaloriesBurned</td>*@
                <td>@exercise.Notes</td>
               @* <td>@exercise.StartpointLat</td>
                <td>@exercise.StartpointLong</td>
                <td>@exercise.EndpointLat</td>
                <td>@exercise.EndpointLong</td>*@
                <td>@exercise.MetersTraveled</td>
                <td>
                    <button class="btn btn-primary" id="muokkaabutton" @onclick="(() => ShowExercise(exercise.ExerciseId))">Tiedot/Muokkaus</button>
                </td>
            </tr>
        }
    </tbody>

</table>

@code {
    private IEnumerable<Exercise> exercises = new List<Exercise>();

    private PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

    private string? searchExerciseType = string.Empty;

    private string? searchLocation = string.Empty;

    IQueryable<Exercise>? filteredExercises => exercises
        .Where(e => e.ExerciseType.ExerciseName.Contains(searchExerciseType, StringComparison.CurrentCultureIgnoreCase))
        .AsQueryable();

    //IQueryable<Exercise>? filteredLocations => exercises
    //   .Where(e => e.Location.City.Contains(searchLocation, StringComparison.CurrentCultureIgnoreCase))
    //   .AsQueryable();


    protected override async Task OnInitializedAsync()
    {
        exercises = await ClientExerciseData.GetAllExercisesAsync();
    }

    void ShowExercise(Guid id)
    {
        NavigationManager.NavigateTo($"harjoite/{id}");
    }

    void CreateNewExercise()
    {
        NavigationManager.NavigateTo("/harjoite");
    }
}


