@page "/fetchdata"
@using Exercisediary.Shared
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <QuickGrid Items="forecasts.AsQueryable()">
        <PropertyColumn Property="forecasts => forecasts.Date" Format="dd MM yyyy" Sortable="true" />      @*dd MM yyyy HH:mm*@
        <PropertyColumn Property="forecasts => forecasts.TemperatureC" Title="Lämpötila °C" Sortable="true" Align="Align.Center" />
        <PropertyColumn Property="forecasts => forecasts.TemperatureF" Title="Lämpötila °F" Sortable="true" Align="Align.Center"/>
        <PropertyColumn Property="forecasts => forecasts.Summary" />
    </QuickGrid>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
    }
}
